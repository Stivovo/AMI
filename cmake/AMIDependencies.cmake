if(__add_ami_dependencies)
	return()
endif()
set(__add_ami_dependencies ON)


find_package(ZLIB REQUIRED)
set(PATCH_COMMAND patch)

# Libzip
# ------
set(AMI_LIBZIP_VERSION 1.5.1)
set(LIBZIP_URL         "${THIRD_PARTY_DIRECTORY}/libzip-${AMI_LIBZIP_VERSION}.tar.gz")
set(LIBZIP_CHECKSUM    SHA256=47eaa45faa448c72bd6906e5a096846c469a185f293cafd8456abb165841b3f2)
set(LIBZIP_PREFIX      "${CMAKE_CURRENT_BINARY_DIR}/LIBZIP")
set(LIBZIP_INSTALL_DIR "${LIBZIP_PREFIX}/install")
set(LIBZIP_INCLUDE_DIRS "${LIBZIP_INSTALL_DIR}/include")
set(LIBZIP_LIBRARIES
  "${LIBZIP_INSTALL_DIR}/lib64/${CMAKE_STATIC_LIBRARY_PREFIX}zip${CMAKE_STATIC_LIBRARY_SUFFIX}")

set(LIBZIP_CMAKE_ARGS
  -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>
  -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
  -DBUILD_SHARED_LIBS=off
  -DENABLE_GNUTLS=off
  -DENABLE_OPENSSL=off
  -DENABLE_COMMONCRYPTO=off
  -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
  -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
)

ExternalProject_Add(LIBZIP
  URL               ${LIBZIP_URL}
  URL_HASH          ${LIBZIP_CHECKSUM}
  CMAKE_ARGS        ${LIBZIP_CMAKE_ARGS}
  PREFIX            "${LIBZIP_PREFIX}"
  UPDATE_COMMAND    ""
  PATCH_COMMAND     ${PATCH_COMMAND} -p1 -i "${THIRD_PARTY_DIRECTORY}/disable_bzip.patch"
  INSTALL_DIR       ${LIBZIP_INSTALL_DIR}
  BUILD_BYPRODUCTS  ${LIBZIP_LIBRARIES}
)


add_dependencies(LIB_AMI_STATIC LIBZIP)

target_link_libraries(LIB_AMI_STATIC INTERFACE ${LIBZIP_LIBRARIES})
target_link_libraries(LIB_AMI_STATIC INTERFACE ${ZLIB_LIBRARIES})

target_include_directories(LIB_AMI_STATIC PUBLIC ${LIBZIP_INSTALL_DIR}/include)
target_include_directories(LIB_AMI_STATIC PUBLIC ${LIBZIP_INSTALL_DIR}/lib/libzip/include)

