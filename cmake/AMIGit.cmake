if(__add_ami_git)
	return()
endif()
set(__add_ami_git ON)


execute_process(
  COMMAND ${GIT_EXECUTABLE} log -1 --format=%h
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE AMI_COMMIT_HASH
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

execute_process(
  COMMAND ${GIT_EXECUTABLE} rev-list --count ${AMI_COMMIT_HASH}
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE AMI_COMMIT_COUNT
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

execute_process(
  COMMAND ${GIT_EXECUTABLE} describe --abbrev=0 --tags HEAD
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE AMI_GIT_TAG
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

execute_process(
  COMMAND ${GIT_EXECUTABLE} tag --list --points-at=HEAD
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE AMI_GIT_COMMIT_TAGGED
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

execute_process(
  COMMAND ${GIT_EXECUTABLE} rev-parse --abbrev-ref HEAD
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE AMI_GIT_BRANCH
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

string(COMPARE NOTEQUAL "${AMI_GIT_COMMIT_TAGGED}" "" AMI_IS_TAGGED)
STRING(REGEX MATCHALL "([0-9]+)" VERSION_STRING "${AMI_GIT_TAG}")

message(STATUS "Tagged: ${AMI_IS_TAGGED}")
if (${AMI_IS_TAGGED})
  message(STATUS "Tag: ${AMI_GIT_TAG}")
endif()
message(STATUS "Current branch: ${AMI_GIT_BRANCH}")
message(STATUS "Version: ${VERSION_STRING}")
#if (${VERSION_STRING} )
list(GET VERSION_STRING 0 AMI_VERSION_MAJOR)
list(GET VERSION_STRING 1 AMI_VERSION_MINOR)
list(GET VERSION_STRING 2 AMI_VERSION_PATCH)
#else()
#  set(AMI_VERSION_MAJOR 0)
#  set(AMI_VERSION_MINOR 0)
#  set(AMI_VERSION_PATCH 0)
#endif()

