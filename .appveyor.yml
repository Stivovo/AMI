version: 0.7.{build}
image: Visual Studio 2017
clone_folder: c:\projects\ami

configuration: Release


platform:
- x86
- x64

environment:
  matrix:
      # Python 3.5
      - PYTHON_VERSION:   "3.5"
        PYTHON32_PATH:    "C:\\Python35"
        PYTHON32_INCLUDE: "C:\\Python35\\include"
        PYTHON32_BINARY:  "C:\\Python35\\python.exe"
        PYTHON32_LIBRARY: "C:\\Python35\\libs\\python35.lib"
        PYTHON64_PATH:    "C:\\Python35-x64"
        PYTHON64_INCLUDE: "C:\\Python35-x64\\include"
        PYTHON64_BINARY:  "C:\\Python35-x64\\python.exe"
        PYTHON64_LIBRARY: "C:\\Python35-x64\\libs\\python35.lib"


      # Python 3.6
      - PYTHON_VERSION:   "3.6"
        PYTHON32_PATH:    "C:\\Python36"
        PYTHON32_INCLUDE: "C:\\Python36\\include"
        PYTHON32_BINARY:  "C:\\Python36\\python.exe"
        PYTHON32_LIBRARY: "C:\\Python36\\libs\\python36.lib"
        PYTHON64_PATH:    "C:\\Python36-x64"
        PYTHON64_INCLUDE: "C:\\Python36-x64\\include"
        PYTHON64_BINARY:  "C:\\Python36-x64\\python.exe"
        PYTHON64_LIBRARY: "C:\\Python36-x64\\libs\\python36.lib"



install:
  - ps: if ($env:PLATFORM -eq "x64") { $env:CMAKE_ARCH = "x64" }

  - ps: if ($env:PLATFORM -eq "x64") { $env:PYTHON_PATH    = $env:PYTHON64_PATH }
  - ps: if ($env:PLATFORM -eq "x64") { $env:PYTHON_INCLUDE = $env:PYTHON64_INCLUDE }
  - ps: if ($env:PLATFORM -eq "x64") { $env:PYTHON_BINARY  = $env:PYTHON64_BINARY }
  - ps: if ($env:PLATFORM -eq "x64") { $env:PYTHON_LIBRARY = $env:PYTHON64_LIBRARY }

  - ps: if ($env:PLATFORM -eq "x86") { $env:PYTHON_PATH    = $env:PYTHON32_PATH }
  - ps: if ($env:PLATFORM -eq "x86") { $env:PYTHON_INCLUDE = $env:PYTHON32_INCLUDE }
  - ps: if ($env:PLATFORM -eq "x86") { $env:PYTHON_BINARY  = $env:PYTHON32_BINARY }
  - ps: if ($env:PLATFORM -eq "x86") { $env:PYTHON_LIBRARY = $env:PYTHON32_LIBRARY }
  - set PATH=%PYTHON_PATH%;%PATH%

  # Upgrade pip
  - python.exe -m pip install --disable-pip-version-check --upgrade pip
  - python.exe -m pip install wheel
  - python.exe -m pip install --upgrade setuptools

  #Â Install zlib
  - appveyor DownloadFile http://zlib.net/zlib-1.2.11.tar.gz -FileName zlib-1.2.11.tar.gz
  - 7z x zlib-1.2.11.tar.gz > NUL
  - 7z x zlib-1.2.11.tar > NUL
  - cd zlib-1.2.11
  - md build
  - cd build
  - cmake -A "%CMAKE_ARCH%" ..
  - cmake --build . --config Release
  - copy zconf.h ..
  - set CMAKE_LIBRARY_PATH=%APPVEYOR_BUILD_FOLDER%\zlib-1.2.11\build\Release
  - set CMAKE_INCLUDE_PATH=%APPVEYOR_BUILD_FOLDER%\zlib-1.2.11

  - set PYTHON_INCLUDE_DIR=%PYTHON_INCLUDE%
  - set PYTHON_EXECUTABLE=%PYTHON_BINARY%
  - set PYTHON_LIBRARY=%PYTHON_LIBRARY%


build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - python.exe ./setup.py install
  - python.exe ./setup.py bdist_wheel
  - python.exe -c "import pyAMI;print(pyAMI)"




